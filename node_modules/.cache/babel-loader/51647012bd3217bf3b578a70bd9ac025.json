{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo\\\\Desktop\\\\final-mervin\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useReducer } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\"; // export const initialState = { theme: \"\", data: [] }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = false;\n\nconst reducer = (theme, action) => {\n  switch (action.type) {\n    case true:\n      return theme = true;\n\n    case false:\n      return theme = false;\n\n    default:\n      return theme;\n  }\n};\n\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\n\nconst setLocalStorage = data => {\n  localStorage.setItem('favs', JSON.stringify(data));\n};\n\nconst getLocalStorate = () => {\n  const dataLocalStorate = localStorage.getItem('favs');\n  return dataLocalStorate ? JSON.parse(dataLocalStorate) : [];\n};\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [users, setUsers] = useState([]);\n  const [dataL, setDataL] = useState(getLocalStorate());\n  const [theme, dispatch] = useReducer(reducer, initialState);\n\n  const handleChangeTheme = () => {\n    dispatch({\n      type: !theme\n    });\n  };\n\n  useEffect(() => {\n    setLocalStorage(dataL);\n  }, [dataL]);\n\n  const getUsers = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      setUsers([...users, ...data]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const data = {\n    users,\n    setDataL,\n    dataL,\n    handleChangeTheme,\n    theme\n  };\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"UCopfuczvpH7cmBop7xdg9bFs14=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["axios","useEffect","useReducer","useState","createContext","initialState","reducer","theme","action","type","ContextGlobal","undefined","setLocalStorage","data","localStorage","setItem","JSON","stringify","getLocalStorate","dataLocalStorate","getItem","parse","ContextProvider","children","users","setUsers","dataL","setDataL","dispatch","handleChangeTheme","getUsers","get","error","console"],"sources":["C:/Users/Pablo/Desktop/final-mervin/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\n// export const initialState = { theme: \"\", data: [] }\r\n\r\nconst initialState = false\r\n\r\nconst reducer = (theme, action) => {\r\n  switch (action.type) {\r\n    case true:\r\n      return theme = true \r\n    case false:\r\n      return theme= false \r\n    default:\r\n      return theme;\r\n  }\r\n}\r\n\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nconst setLocalStorage = (data) => {\r\n  localStorage.setItem('favs', JSON.stringify(data))\r\n}\r\n\r\nconst getLocalStorate = () => {\r\n  const dataLocalStorate = localStorage.getItem('favs')\r\n  return dataLocalStorate ? JSON.parse(dataLocalStorate) : []\r\n}\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n  const [users, setUsers] = useState([])\r\n  const [dataL, setDataL] = useState(getLocalStorate())\r\n  const [theme, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const handleChangeTheme = () => {\r\n    dispatch({\r\n      type: !theme\r\n    })\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setLocalStorage(dataL)\r\n  }, [dataL])\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n      setUsers([...users, ...data]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [])\r\n\r\n\r\n  const data = {\r\n    users,\r\n    setDataL,\r\n    dataL,\r\n    handleChangeTheme,\r\n    theme\r\n  }\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={data}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,OAA9B,C,CAEA;;;AAEA,MAAMC,YAAY,GAAG,KAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,IAAL;MACE,OAAOF,KAAK,GAAG,IAAf;;IACF,KAAK,KAAL;MACE,OAAOA,KAAK,GAAE,KAAd;;IACF;MACE,OAAOA,KAAP;EANJ;AAQD,CATD;;AAYA,OAAO,MAAMG,aAAa,gBAAGN,aAAa,CAACO,SAAD,CAAnC;;AAEP,MAAMC,eAAe,GAAIC,IAAD,IAAU;EAChCC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA7B;AACD,CAFD;;AAIA,MAAMK,eAAe,GAAG,MAAM;EAC5B,MAAMC,gBAAgB,GAAGL,YAAY,CAACM,OAAb,CAAqB,MAArB,CAAzB;EACA,OAAOD,gBAAgB,GAAGH,IAAI,CAACK,KAAL,CAAWF,gBAAX,CAAH,GAAkC,EAAzD;AACD,CAHD;;AAKA,OAAO,MAAMG,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAACe,eAAe,EAAhB,CAAlC;EACA,MAAM,CAACX,KAAD,EAAQqB,QAAR,IAAoB1B,UAAU,CAACI,OAAD,EAAUD,YAAV,CAApC;;EAEA,MAAMwB,iBAAiB,GAAG,MAAM;IAC9BD,QAAQ,CAAC;MACPnB,IAAI,EAAE,CAACF;IADA,CAAD,CAAR;EAID,CALD;;EAQAN,SAAS,CAAC,MAAM;IACdW,eAAe,CAACc,KAAD,CAAf;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;EAIA,MAAMI,QAAQ,GAAG,YAAY;IAC3B,IAAI;MACF,MAAM;QAAEjB;MAAF,IAAW,MAAMb,KAAK,CAAC+B,GAAN,CAAU,4CAAV,CAAvB;MACAN,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGX,IAAd,CAAD,CAAR;IACD,CAHD,CAGE,OAAOmB,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACD;EACF,CAPD;;EASA/B,SAAS,CAAC,MAAM;IACd6B,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;EAKA,MAAMjB,IAAI,GAAG;IACXW,KADW;IAEXG,QAFW;IAGXD,KAHW;IAIXG,iBAJW;IAKXtB;EALW,CAAb;EAQA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEM,IAA/B;IAAA,UACGU;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA7CM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}